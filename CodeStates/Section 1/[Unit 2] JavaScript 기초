# Chapter 1. 변수
1. 변수
  1-1. 변수의 이해
    - 변수: 데이터를 다루는 방법
    - 변수의 의미
      ㄴ 데이터의 보관함
      ㄴ 보관함의 크기는 동일
      ㄴ 각 보관함의 이름 = 변수
      ㄴ 이름을 통해 데이터 사용(재활용)
      
    1) How to use 변수
      (1)✨ 보관함 확보
        - 선언(declaration)
          ex) let age;
      (2)✨ 보관함에 데이터 저장
        - 할당(assignment)
          ex) age = 12; // 이 때, = 는 '같다'의 이미가 아닌, '할당한다'의 의미!
      (3)✨ 선언과 할당은 동시에 할 수도 있다
          ex) let name = 'kim';
          
  1-2. 변수의 선언
    1) 변수와 타입
      - 변수: 상황에 따라 변할 수 있는 값
      - 선언: let myname;
        // 한 번 만 할 수 있음!
      - 할당: myname = 'Steve';
        // = 는 '할당한다'의 의미
      - 선언+할당 동시에: let myname = 'Steve';
      - 즉, 변수는 "이름(Label)이 붙은 값
      - 표현식: 변수와 특정 값을 사용해 연산을 한 경우. 변수를 이용해 값을 계산하려고 할 때 그 식을 표현식이라 함.
      
    2) 변수 이름의 규칙
      - 공백 금지
      - Camel Case 사용
    
    3) 변수는 동일한 변수를 이용해 대입할 수 있음
      ex) let sum = 1;
          sum = sum + 2;
          sum = sum + 3;
          sum = sum + 4;
          //✨ = 이 '할당하다'의 의미이기 때문에 sum에 이미 할당된 sum + 2의 값을 대입한 것
          //✨ 한 번 선언한 변수를 다시 사용할 땐 let을 사용하지 않음
          
  1-3. 구구단 출력하기
    *) 구구단 2단 출력하기
    *) 구구당 3단 출력하기
  
# Chapter 2. 타입
2. 타입
  2-1. 타입의 이해
    - 변수에는 다양한 타입이 있다.
